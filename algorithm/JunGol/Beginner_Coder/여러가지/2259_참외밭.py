# 시골에 있는 태양이의 삼촌 댁에는 커다란 참외밭이 있다.
#
# 문득 태양이는 이 밭에서 자라는 참외가 도대체 몇 개나 되는지 궁금해졌다.
#
# 어떻게 알아낼 수 있는지 골똘히 생각하다가 드디어 좋은 아이디어가 떠올랐다.
#
#
#
# 유레카!
#
# 1㎡의 넓이에 자라는 참외 개수를 헤아린 다음, 참외밭의 넓이를 구하면 비례식을 이용하여 참외의 총개수를 구할 수 있다.
#
#
# 1㎡의 넓이에 자라는 참외의 개수는 헤아렸고, 이제 참외밭의 넓이만 구하면 된다.
#
# 참외밭은 ㄱ-자 모양이거나 ㄱ-자를 90도, 180도, 270도 회전한 모양(┏, ┗, ┛ 모양)의 육각형이다.
#
# 다행히도 밭의 경계(육각형의 변)는 모두 동서 방향이거나 남북 방향이었다.
#
# 밭의 한 모퉁이에서 출발하여 밭의 둘레를 돌면서 밭경계 길이를 모두 측정하였다.
#
#
#
#
#
#
#
#
#
#
#
#
# 예를 들어 참외밭이 위 그림과 같은 모양이라고 하자.
#
# 그림에서 오른쪽은 동쪽, 왼쪽은 서쪽, 아래쪽은 남쪽, 위쪽은 북쪽이다.
#
# 이 그림의 왼쪽위 꼭지점에서 출발하여,
#
# 반시계방향으로 남쪽으로 30m, 동쪽으로 60m, 남쪽으로 20m, 동쪽으로 100m, 북쪽으로 50m, 서쪽으로 160m 이동하면
#
# 다시 출발점으로 되돌아가게 된다.
#
#
#
#
# 위 그림의 참외밭 면적은 6800㎡이다. 만약 1㎡의 넓이에 자라는 참외의 개수가 7이라면, 이 밭에서 자라는 참외의 개수는 47600으로 계산된다.
#
#
# 1㎡의 넓이에 자라는 참외의 개수와,
#
# 참외밭을 이루는 육각형의 임의의 한 꼭지점에서 출발하여 반시계방향으로 둘레를 돌면서 지나는 변의 방향과 길이가 순서대로 주어진다.
#
#
#
# 이 참외밭에서 자라는 참외의 수를 구하는 프로그램을 작성하시오.

# 총 6꼭짓점에서 출발
# 동쪽은 1, 서쪽은 2, 남쪽은 3, 북쪽은 4
K = int(input())
ans = []
result = 0
for i in range(6):
    n, l = map(int,input().split())
    ans.append((n,l))

if ans[0][0] == ans[2][0]:
    if ans[1][0] == ans[3][0]:
        result = ans[4][1] * ans[5][1] - ans[1][1] * ans[2][1]
    else:
        result = ans[3][1] * ans[4][1] - ans[0][1] * ans[1][1]
elif ans[2][0] == ans[4][0]:
    if ans[1][0] == ans[3][0]:
        result = ans[0][1] * ans[5][1] - ans[2][1] * ans[3][1]
    else:
        result = ans[0][1] * ans[1][1] - ans[3][1] * ans[4][1]
elif ans[3][0] == ans[5][0]:
    result = ans[1][1] * ans[2][1] - ans[4][1] * ans[5][1]
else:
    result = ans[2][1] * ans[3][1] - ans[0][1] * ans[5][1]

print(result * K)

# 1. 가장 큰 한변을 기준으로 잡는다.
# 2. 1에서 선택된 변에 연결된 두 변 중에 짧은 쪽을 곱해서 부분 넓이를 구한다.
# 3. 1에서 선택된 변에 연결된 두 변과 2에서 사용한 변에 연결된 두 변을 제외한 나머지 두 변을 곱하면 나머지 부분의 넓이를 구할 수 있다.
# 4. 2와 3의 합을구하고 N을 곱하면 참외개수가 된다.