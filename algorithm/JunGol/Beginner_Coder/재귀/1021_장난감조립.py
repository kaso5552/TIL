# 우리는 어떤 장난감을 여러 가지 부품으로 조립하여 만들려고 한다.
#
# 이 장난감을 만드는데는 기본 부품과 그 기본 부품으로 조립하여 만든 중간 부품이 사용된다.
#
# 기본 부품은 다른 부품을 사용하여 조립될수 없는 부품이다.
#
# 중간 부품은 또 다른 중간 부품이나 기본 부품을 이용하여 만들어지는 부품이다.
#
#
#
# 예를 들어보자. 기본 부품으로서 1, 2, 3, 4가 있다.
#
# 중간 부품 5는 2개의 기본 부품 1과 2개의 기본 부품 2로 만들어진다.
#
# 그리고 중간 부품 6은 2개의 중간 부품 5, 3개의 기본 부품 3과 4개의 기본 부품 4로 만들어진다.
#
# 마지막으로 장난감 완제품 7은 2개의 중간 부품 5, 3개의 중간 부품 6과 5개의 기본 부품 4로 만들어진다.
#
# 이런 경우에 장난감 완제품 7을 만드는데 필요한 기본 부품의 개수는 1번 16개, 2번 16개, 3번 9개, 4번 17개 이다.
#
#
#
# 이와 같이 어떤 장난감 완제품과 그에 필요한 부품들 사이의 관계가 주어져 있을 때
#
# 하나의 장난감 완제품을 조립하기 위하여 필요한 기본 부품의 종류별 개수를 계산하는 프로그램을 작성하시오.
def check(s, e, c, n):
    tmp = 1
    for i in range(M):
        if data[i][0] == e:
            check(data[i][0], data[i][1], data[i][2], n * c)
            tmp = 0
    if tmp :
        counted[e] += (c * n)


N = int(input())
M = int(input())
data = []
counted = [0] * (N+1)
base_num = [0] * (N+1)
for i in range(M):
    X, Y, Z = map(int,input().split())
    data.append([X, Y, Z])
    base_num[X] = 1

for i in range(M):
    if data[i][0] == N:
        check(data[i][0], data[i][1], data[i][2], 1)

for i in range(1, N + 1):
    if counted[i] != 0:
        print(f'{i} {counted[i]}')